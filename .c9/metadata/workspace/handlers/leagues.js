{"filter":false,"title":"leagues.js","tooltip":"/handlers/leagues.js","undoManager":{"mark":15,"position":15,"stack":[[{"start":{"row":24,"column":4},"end":{"row":24,"column":70},"action":"remove","lines":["if (this.debug) util.log(\"Sending CMsgDOTALeaguesInMonthRequest\");"],"id":3},{"start":{"row":24,"column":4},"end":{"row":24,"column":63},"action":"insert","lines":["this.Logger.debug(\"Sending CMsgDOTALeaguesInMonthRequest\");"]}],[{"start":{"row":44,"column":4},"end":{"row":44,"column":62},"action":"remove","lines":["if (this.debug) util.log(\"Sending CMsgRequestLeagueInfo\");"],"id":4},{"start":{"row":44,"column":4},"end":{"row":44,"column":55},"action":"insert","lines":["this.Logger.debug(\"Sending CMsgRequestLeagueInfo\");"]}],[{"start":{"row":60,"column":4},"end":{"row":60,"column":78},"action":"remove","lines":["if (this.debug) util.log(\"Sending CMsgClientToGCTopLeagueMatchesRequest\");"],"id":5},{"start":{"row":60,"column":4},"end":{"row":60,"column":71},"action":"insert","lines":["this.Logger.debug(\"Sending CMsgClientToGCTopLeagueMatchesRequest\");"]}],[{"start":{"row":126,"column":8},"end":{"row":126,"column":91},"action":"remove","lines":["if (this.debug) util.log(\"Received leagues in month response \" + response.eresult);"],"id":6},{"start":{"row":126,"column":8},"end":{"row":126,"column":84},"action":"insert","lines":["this.Logger.debug(\"Received leagues in month response \" + response.eresult);"]}],[{"start":{"row":130,"column":8},"end":{"row":130,"column":74},"action":"remove","lines":["if (this.debug) util.log(\"Received a bad leaguesInMonthResponse\");"],"id":7},{"start":{"row":130,"column":8},"end":{"row":130,"column":67},"action":"insert","lines":["this.Logger.error(\"Received a bad leaguesInMonthResponse\");"]}],[{"start":{"row":150,"column":8},"end":{"row":150,"column":101},"action":"remove","lines":["if (this.debug) util.log(\"Received information for \" + response.leagues.length + \" leagues\");"],"id":8},{"start":{"row":150,"column":8},"end":{"row":150,"column":94},"action":"insert","lines":["this.Logger.debug(\"Received information for \" + response.leagues.length + \" leagues\");"]}],[{"start":{"row":153,"column":8},"end":{"row":153,"column":81},"action":"remove","lines":["if (this.debug) util.log(\"Received a bad leagueInfo response\", response);"],"id":9},{"start":{"row":153,"column":8},"end":{"row":153,"column":74},"action":"insert","lines":["this.Logger.error(\"Received a bad leagueInfo response\", response);"]}],[{"start":{"row":163,"column":8},"end":{"row":163,"column":108},"action":"remove","lines":["if (this.debug) util.log(\"Received information for \" + response.matches.length + \" league matches\");"],"id":10},{"start":{"row":163,"column":8},"end":{"row":163,"column":101},"action":"insert","lines":["this.Logger.debug(\"Received information for \" + response.matches.length + \" league matches\");"]}],[{"start":{"row":166,"column":8},"end":{"row":166,"column":87},"action":"remove","lines":["if (this.debug) util.log(\"Received a bad topLeagueMatches response\", response);"],"id":11},{"start":{"row":166,"column":8},"end":{"row":166,"column":80},"action":"insert","lines":["this.Logger.error(\"Received a bad topLeagueMatches response\", response);"]}],[{"start":{"row":4,"column":0},"end":{"row":34,"column":2},"action":"remove","lines":["/**"," * Sends a message to the Game Coordinator requesting data on leagues being played in the given month.  "," * Provide a callback or listen for {@link module:Dota2.Dota2Client#event:leaguesInMonthData|leaguesInMonthData} for the Game Coordinator's response. "," * Requires the GC to be {@link module:Dota2.Dota2Client#event:ready|ready}."," * @alias module:Dota2.Dota2Client#requestLeaguesInMonth"," * @param {number} [month=(new Date()).getMonth()] - Month (MM) you want to query data for. **IMPORTANT NOTE**:  Month is zero-aligned, not one-aligned; so Jan = 00, Feb = 01, etc."," * @param {number} [year=(new Date()).getFullYear()] - Year (YYYY) you want to query data for."," * @param {number} [tier=0] - Search only for a specific tier of tournaments. "," * @param {module:Dota2~requestCallback} [callback] - Called with `err, CMsgDOTALeaguesInMonthResponse`"," */","Dota2.Dota2Client.prototype.requestLeaguesInMonth = function(month, year, tier, callback) {","    var _self = this;","    var now = new Date();","","    // Month & year default to current time values","    month = month === undefined ? now.getMonth() : month;","    year = year || now.getFullYear();","    tier = tier || 0;","    callback = callback || null;","","    this.Logger.debug(\"Sending CMsgDOTALeaguesInMonthRequest\");","    ","    var payload = {","        'month': month,","        'year': year,","        'tier': tier","    };","    this.sendToGC(  Dota2.schema.lookupEnum(\"EDOTAGCMsg\").values.k_EMsgGCLeaguesInMonthRequest, ","                    Dota2.schema.lookupType(\"CMsgDOTALeaguesInMonthRequest\").encode(payload).finish(), ","                    onLeaguesInMonthResponse, callback);","};"],"id":12}],[{"start":{"row":4,"column":0},"end":{"row":5,"column":0},"action":"remove","lines":["",""],"id":13}],[{"start":{"row":88,"column":53},"end":{"row":104,"column":0},"action":"remove","lines":["","","var onLeaguesInMonthResponse = function onLeaguesInMonthResponse(message, callback) {","    callback = callback || null;","    var response = Dota2.schema.lookupType(\"CMsgDOTALeaguesInMonthResponse\").decode(message);","","    if (response.eresult === 1) {","        this.Logger.debug(\"Received leagues in month response \" + response.eresult);","        this.emit(\"leaguesInMonthData\", response.month, response.year, response.leagues);","        if (callback) callback(null, response);","    } else {","        this.Logger.error(\"Received a bad leaguesInMonthResponse\");","        if (callback) callback(response.eresult, response);","    }","};","handlers[Dota2.schema.lookupEnum(\"EDOTAGCMsg\").values.k_EMsgGCLeaguesInMonthResponse] = onLeaguesInMonthResponse;",""],"id":14}],[{"start":{"row":88,"column":53},"end":{"row":89,"column":0},"action":"insert","lines":["",""],"id":15}],[{"start":{"row":37,"column":9},"end":{"row":56,"column":3},"action":"remove","lines":["","/**"," * Emitted in response to a {@link module:Dota2.Dota2Client#requestLeaguesInMonth|request for the leagues in a given month}."," * The leagues that are returned are those which have one or more matches in the given month."," * They can however also have other matches in a different month."," * @event module:Dota2.Dota2Client#leaguesInMonthData"," * @param {number} month - Month this data represents."," * @param {number} year - Year this data represents"," * @param {Object[]} leagues - List of leagues that have matches in the given month"," * @param {number} leagues[].league_id - ID of the league"," * @param {Object[]} leagues[].schedule - The scheduled games in this league. Might contain matches in other months."," * @param {number} leagues[].schedule[].block_id - ID of the schedule block"," * @param {number} leagues[].schedule[].start_time - Unix timestamp of the start time of this scheduled match"," * @param {boolean} leagues[].schedule[].finals - Whether or not this is a finals game"," * @param {string} leagues[].schedule[].comment - Comment about this scheduled block; often the team names & position in bracket"," * @param {Object[]} leagues[].schedule[].teams - The teams duking it out in this match"," * @param {number} leagues[].schedule[].teams[].team_id - ID of the team. Not every participating team seems to be hooked up to Dota 2's team system, so 0 entries can happen"," * @param {string} leagues[].schedule[].teams[].name - Name of the team"," * @param {external:Long} leagues[].schedule[].teams[].logo - Logo of the team"," */"],"id":16}],[{"start":{"row":3,"column":10},"end":{"row":34,"column":2},"action":"insert","lines":["","/**"," * Sends a message to the Game Coordinator requesting data on leagues being played in the given month.  "," * Provide a callback or listen for {@link module:Dota2.Dota2Client#event:leaguesInMonthData|leaguesInMonthData} for the Game Coordinator's response. "," * Requires the GC to be {@link module:Dota2.Dota2Client#event:ready|ready}."," * @alias module:Dota2.Dota2Client#requestLeaguesInMonth"," * @param {number} [month=(new Date()).getMonth()] - Month (MM) you want to query data for. **IMPORTANT NOTE**:  Month is zero-aligned, not one-aligned; so Jan = 00, Feb = 01, etc."," * @param {number} [year=(new Date()).getFullYear()] - Year (YYYY) you want to query data for."," * @param {number} [tier=0] - Search only for a specific tier of tournaments. "," * @param {module:Dota2~requestCallback} [callback] - Called with `err, CMsgDOTALeaguesInMonthResponse`"," */","Dota2.Dota2Client.prototype.requestLeaguesInMonth = function(month, year, tier, callback) {","    var _self = this;","    var now = new Date();","","    // Month & year default to current time values","    month = month === undefined ? now.getMonth() : month;","    year = year || now.getFullYear();","    tier = tier || 0;","    callback = callback || null;","","    this.Logger.debug(\"Sending CMsgDOTALeaguesInMonthRequest\");","    ","    var payload = {","        'month': month,","        'year': year,","        'tier': tier","    };","    this.sendToGC(  Dota2.schema.lookupEnum(\"EDOTAGCMsg\").values.k_EMsgGCLeaguesInMonthRequest, ","                    Dota2.schema.lookupType(\"CMsgDOTALeaguesInMonthRequest\").encode(payload).finish(), ","                    onLeaguesInMonthResponse, callback);","};"],"id":17,"ignore":true},{"start":{"row":70,"column":0},"end":{"row":89,"column":0},"action":"insert","lines":[" * Emitted in response to a {@link module:Dota2.Dota2Client#requestLeaguesInMonth|request for the leagues in a given month}."," * The leagues that are returned are those which have one or more matches in the given month."," * They can however also have other matches in a different month."," * @event module:Dota2.Dota2Client#leaguesInMonthData"," * @param {number} month - Month this data represents."," * @param {number} year - Year this data represents"," * @param {Object[]} leagues - List of leagues that have matches in the given month"," * @param {number} leagues[].league_id - ID of the league"," * @param {Object[]} leagues[].schedule - The scheduled games in this league. Might contain matches in other months."," * @param {number} leagues[].schedule[].block_id - ID of the schedule block"," * @param {number} leagues[].schedule[].start_time - Unix timestamp of the start time of this scheduled match"," * @param {boolean} leagues[].schedule[].finals - Whether or not this is a finals game"," * @param {string} leagues[].schedule[].comment - Comment about this scheduled block; often the team names & position in bracket"," * @param {Object[]} leagues[].schedule[].teams - The teams duking it out in this match"," * @param {number} leagues[].schedule[].teams[].team_id - ID of the team. Not every participating team seems to be hooked up to Dota 2's team system, so 0 entries can happen"," * @param {string} leagues[].schedule[].teams[].name - Name of the team"," * @param {external:Long} leagues[].schedule[].teams[].logo - Logo of the team"," */","/**",""]},{"start":{"row":121,"column":0},"end":{"row":136,"column":0},"action":"insert","lines":["var onLeaguesInMonthResponse = function onLeaguesInMonthResponse(message, callback) {","    callback = callback || null;","    var response = Dota2.schema.lookupType(\"CMsgDOTALeaguesInMonthResponse\").decode(message);","","    if (response.eresult === 1) {","        this.Logger.debug(\"Received leagues in month response \" + response.eresult);","        this.emit(\"leaguesInMonthData\", response.month, response.year, response.leagues);","        if (callback) callback(null, response);","    } else {","        this.Logger.error(\"Received a bad leaguesInMonthResponse\");","        if (callback) callback(response.eresult, response);","    }","};","handlers[Dota2.schema.lookupEnum(\"EDOTAGCMsg\").values.k_EMsgGCLeaguesInMonthResponse] = onLeaguesInMonthResponse;","",""]}],[{"start":{"row":3,"column":10},"end":{"row":34,"column":2},"action":"remove","lines":["","/**"," * Sends a message to the Game Coordinator requesting data on leagues being played in the given month.  "," * Provide a callback or listen for {@link module:Dota2.Dota2Client#event:leaguesInMonthData|leaguesInMonthData} for the Game Coordinator's response. "," * Requires the GC to be {@link module:Dota2.Dota2Client#event:ready|ready}."," * @alias module:Dota2.Dota2Client#requestLeaguesInMonth"," * @param {number} [month=(new Date()).getMonth()] - Month (MM) you want to query data for. **IMPORTANT NOTE**:  Month is zero-aligned, not one-aligned; so Jan = 00, Feb = 01, etc."," * @param {number} [year=(new Date()).getFullYear()] - Year (YYYY) you want to query data for."," * @param {number} [tier=0] - Search only for a specific tier of tournaments. "," * @param {module:Dota2~requestCallback} [callback] - Called with `err, CMsgDOTALeaguesInMonthResponse`"," */","Dota2.Dota2Client.prototype.requestLeaguesInMonth = function(month, year, tier, callback) {","    var _self = this;","    var now = new Date();","","    // Month & year default to current time values","    month = month === undefined ? now.getMonth() : month;","    year = year || now.getFullYear();","    tier = tier || 0;","    callback = callback || null;","","    this.Logger.debug(\"Sending CMsgDOTALeaguesInMonthRequest\");","    ","    var payload = {","        'month': month,","        'year': year,","        'tier': tier","    };","    this.sendToGC(  Dota2.schema.lookupEnum(\"EDOTAGCMsg\").values.k_EMsgGCLeaguesInMonthRequest, ","                    Dota2.schema.lookupType(\"CMsgDOTALeaguesInMonthRequest\").encode(payload).finish(), ","                    onLeaguesInMonthResponse, callback);","};"],"id":18,"ignore":true},{"start":{"row":39,"column":0},"end":{"row":58,"column":0},"action":"remove","lines":[" * Emitted in response to a {@link module:Dota2.Dota2Client#requestLeaguesInMonth|request for the leagues in a given month}."," * The leagues that are returned are those which have one or more matches in the given month."," * They can however also have other matches in a different month."," * @event module:Dota2.Dota2Client#leaguesInMonthData"," * @param {number} month - Month this data represents."," * @param {number} year - Year this data represents"," * @param {Object[]} leagues - List of leagues that have matches in the given month"," * @param {number} leagues[].league_id - ID of the league"," * @param {Object[]} leagues[].schedule - The scheduled games in this league. Might contain matches in other months."," * @param {number} leagues[].schedule[].block_id - ID of the schedule block"," * @param {number} leagues[].schedule[].start_time - Unix timestamp of the start time of this scheduled match"," * @param {boolean} leagues[].schedule[].finals - Whether or not this is a finals game"," * @param {string} leagues[].schedule[].comment - Comment about this scheduled block; often the team names & position in bracket"," * @param {Object[]} leagues[].schedule[].teams - The teams duking it out in this match"," * @param {number} leagues[].schedule[].teams[].team_id - ID of the team. Not every participating team seems to be hooked up to Dota 2's team system, so 0 entries can happen"," * @param {string} leagues[].schedule[].teams[].name - Name of the team"," * @param {external:Long} leagues[].schedule[].teams[].logo - Logo of the team"," */","/**",""]},{"start":{"row":71,"column":0},"end":{"row":86,"column":0},"action":"remove","lines":["var onLeaguesInMonthResponse = function onLeaguesInMonthResponse(message, callback) {","    callback = callback || null;","    var response = Dota2.schema.lookupType(\"CMsgDOTALeaguesInMonthResponse\").decode(message);","","    if (response.eresult === 1) {","        this.Logger.debug(\"Received leagues in month response \" + response.eresult);","        this.emit(\"leaguesInMonthData\", response.month, response.year, response.leagues);","        if (callback) callback(null, response);","    } else {","        this.Logger.error(\"Received a bad leaguesInMonthResponse\");","        if (callback) callback(response.eresult, response);","    }","};","handlers[Dota2.schema.lookupEnum(\"EDOTAGCMsg\").values.k_EMsgGCLeaguesInMonthResponse] = onLeaguesInMonthResponse;","",""]}]]},"ace":{"folds":[{"start":{"row":71,"column":81},"end":{"row":78,"column":0},"placeholder":"..."}],"scrolltop":420,"scrollleft":0,"selection":{"start":{"row":37,"column":9},"end":{"row":37,"column":9},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":94,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1509551296722,"hash":"f03c1c0c5e83db6f6a20f8b81f6b27d2eecf7689"}